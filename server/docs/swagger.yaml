basePath: /v1
definitions:
  model.Card:
    properties:
      Art:
        type: string
      Id:
        type: integer
      Suit:
        $ref: '#/definitions/model.Suit'
      Value:
        $ref: '#/definitions/model.CardValue'
    type: object
  model.CardState:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Deck
    - Hand
    - Play
    - Kitty
  model.CardValue:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    type: integer
    x-enum-varnames:
    - Ace
    - Two
    - Three
    - Four
    - Five
    - Six
    - Seven
    - Eight
    - Nine
    - Ten
    - Jack
    - Queen
    - King
    - Joker
  model.Chat:
    properties:
      members:
        items:
          type: integer
        type: array
      messages:
        items:
          $ref: '#/definitions/model.ChatMessage'
        type: array
    type: object
  model.ChatMessage:
    properties:
      message:
        type: string
      sender:
        type: integer
      timestamp:
        type: string
    type: object
  model.GameAction:
    properties:
      gameplayCardId:
        type: integer
      matchId:
        type: integer
      type:
        $ref: '#/definitions/model.GameActionType'
    type: object
  model.GameActionType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Cut
    - Discard
    - Peg
    - Tally
  model.GameState:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    type: integer
    x-enum-varnames:
    - WaitingState
    - DealState
    - CutState
    - DiscardState
    - PlayState
    - OpponentState
    - KittyState
    - GameWonState
    - GameLostState
  model.GameplayCard:
    properties:
      cardId:
        type: integer
      currOwner:
        type: integer
      id:
        type: integer
      matchId:
        type: integer
      origOwner:
        type: integer
      state:
        $ref: '#/definitions/model.CardState'
    type: object
  model.History:
    properties:
      losers:
        items:
          type: integer
        type: array
      matchCompletetionDate:
        type: string
      matchId:
        type: integer
      winners:
        items:
          type: integer
        type: array
    type: object
  model.Match:
    properties:
      accountIds:
        items:
          type: integer
        type: array
      art:
        type: string
      cardsInPlay:
        items:
          type: integer
        type: array
      creationDate:
        type: string
      currentPlayerTurn:
        type: integer
      cutGameCardId:
        type: integer
      deckId:
        type: integer
      eloRangeMax:
        type: integer
      eloRangeMin:
        type: integer
      gameState:
        $ref: '#/definitions/model.GameState'
      id:
        type: integer
      playerIds:
        items:
          type: integer
        type: array
      players:
        items:
          $ref: '#/definitions/model.Player'
        type: array
      privateMatch:
        type: boolean
      turnPassTimestamps:
        items:
          type: string
        type: array
    type: object
  model.Player:
    properties:
      art:
        type: string
      hand:
        items:
          type: integer
        type: array
      id:
        type: integer
      kitty:
        items:
          type: integer
        type: array
      score:
        type: integer
    type: object
  model.ScoreResults:
    properties:
      results:
        items:
          $ref: '#/definitions/model.Scores'
        type: array
    type: object
  model.Scores:
    properties:
      cards:
        items:
          $ref: '#/definitions/model.GameplayCard'
        type: array
      point:
        type: integer
    type: object
  model.Suit:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Spades
    - Clubs
    - Hearts
    - Diamonds
host: localhost:1323
info:
  contact: {}
  description: cribbage rest server
  title: cribbage server
  version: 0.0.2
paths:
  /admin/card/:
    post:
      consumes:
      - application/json
      parameters:
      - description: card Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Card'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Card'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new card
      tags:
      - cards
    put:
      consumes:
      - application/json
      parameters:
      - description: card Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Card'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Card'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update card by id
      tags:
      - cards
  /admin/match/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: search for match by barcode
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get match by barcode
      tags:
      - match
  /admin/match/card:
    delete:
      consumes:
      - application/json
      parameters:
      - description: search for match by barcode
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get match by barcode
      tags:
      - match
  /card/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: search for card by barcode
        in: query
        name: barcode
        required: true
        type: string
      - description: Store in which the barcode was found
        in: query
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Card'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get card by barcode
      tags:
      - cards
  /chat/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: search for chat by barcode
        in: query
        name: barcode
        required: true
        type: string
      - description: Store in which the barcode was found
        in: query
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Chat'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get chat by barcode
      tags:
      - chats
    get:
      consumes:
      - application/json
      parameters:
      - description: search for chat by barcode
        in: query
        name: barcode
        required: true
        type: string
      - description: Store in which the barcode was found
        in: query
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Chat'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get chat by barcode
      tags:
      - chats
    post:
      consumes:
      - application/json
      parameters:
      - description: chat Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Chat'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Chat'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new chat
      tags:
      - chats
    put:
      consumes:
      - application/json
      parameters:
      - description: chat Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Chat'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Chat'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update chat by barcode
      tags:
      - chats
  /game/playCard/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Action to perform
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.GameAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScoreResults'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Play a card
      tags:
      - game
  /history/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: search for history by barcode
        in: query
        name: barcode
        required: true
        type: string
      - description: Store in which the barcode was found
        in: query
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.History'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get history by barcode
      tags:
      - historys
    get:
      consumes:
      - application/json
      parameters:
      - description: search for history by barcode
        in: query
        name: barcode
        required: true
        type: string
      - description: Store in which the barcode was found
        in: query
        name: storeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.History'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get history by barcode
      tags:
      - historys
    post:
      consumes:
      - application/json
      parameters:
      - description: history Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.History'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.History'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new history
      tags:
      - historys
    put:
      consumes:
      - application/json
      parameters:
      - description: history Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.History'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.History'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update history by barcode
      tags:
      - historys
  /player/allcards/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameplayCard'
            type: array
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all cards
      tags:
      - cards
  /player/card/:
    get:
      consumes:
      - application/json
      parameters:
      - description: search for card by id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Card'
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get card by barcode
      tags:
      - cards
  /player/gameplaycards/:
    get:
      consumes:
      - application/json
      parameters:
      - description: csv of ids
        in: query
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameplayCard'
            type: array
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get cards by ids
      tags:
      - cards
  /player/match/:
    get:
      consumes:
      - application/json
      parameters:
      - description: search for match by barcode
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "404":
          description: Not Found
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Get match by barcode
      tags:
      - match
    post:
      consumes:
      - application/json
      parameters:
      - description: match Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Match'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new match
      tags:
      - match
    put:
      consumes:
      - application/json
      parameters:
      - description: match Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Match'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update match by barcode
      tags:
      - match
  /player/match/card:
    get:
      consumes:
      - application/json
      parameters:
      - description: search for match by barcode
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get match by barcode
      tags:
      - match
    post:
      consumes:
      - application/json
      parameters:
      - description: match Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Match'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new match card
      tags:
      - match_card
    put:
      consumes:
      - application/json
      parameters:
      - description: match Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Match'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update match by barcode
      tags:
      - match
  /player/player/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: search for match by barcode
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Player'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get player by barcode
      tags:
      - players
    get:
      consumes:
      - application/json
      parameters:
      - description: search for match by barcode
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Player'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get player by barcode
      tags:
      - players
    post:
      consumes:
      - application/json
      parameters:
      - description: player Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Player'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new player
      tags:
      - players
    put:
      consumes:
      - application/json
      parameters:
      - description: player Object to save
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/model.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Player'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update player by barcode
      tags:
      - players
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
