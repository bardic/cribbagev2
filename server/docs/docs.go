// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/login/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "id to login with",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/admin/card/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Update card by id",
                "parameters": [
                    {
                        "description": "card Object to save",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Create new card",
                "parameters": [
                    {
                        "description": "card Object to save",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/admin/match/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Get match by barcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search for match by barcode",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GameMatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/card/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get card by barcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search for card by barcode",
                        "name": "barcode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Store in which the barcode was found",
                        "name": "storeId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/allcards/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get all cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GameplayCard"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/gameplaycards/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get cards by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csv of ids",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GameplayCard"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/kitty": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Update kitty with ids",
                "parameters": [
                    {
                        "description": "array of ids to add to kitty",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HandModifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GameMatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/match/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Get match by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search for match by id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MatchDetailsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Update match by id",
                "parameters": [
                    {
                        "description": "match Object to update",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GameMatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GameMatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Create new match",
                "parameters": [
                    {
                        "description": "MatchRequirements",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MatchRequirements"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/match/cut": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Cut deck by index",
                "parameters": [
                    {
                        "description": "Deck index that is to become the cut",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CutDeckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/match/deck/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deck"
                ],
                "summary": "Get deck by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search for deck by id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GameDeck"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    }
                }
            }
        },
        "/player/match/join": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Join match by id",
                "parameters": [
                    {
                        "description": "match Object to update",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.JoinMatchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MatchDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/matches/open": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Get match by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GameMatch"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    }
                }
            }
        },
        "/player/play": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Update play with ids",
                "parameters": [
                    {
                        "description": "array of ids to add to play",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HandModifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GameMatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/player/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get player by barcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search for match by barcode",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Player"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Update player by barcode",
                "parameters": [
                    {
                        "description": "player Object to save",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Player"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Player"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Create new player",
                "parameters": [
                    {
                        "description": "player Object to save",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Player"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get player by barcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search for match by barcode",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Player"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/player/ready": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Update player to mark as ready",
                "parameters": [
                    {
                        "description": "player id to update",
                        "name": "details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Card": {
            "type": "object",
            "properties": {
                "Art": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Suit": {
                    "$ref": "#/definitions/model.Suit"
                },
                "Value": {
                    "$ref": "#/definitions/model.CardValue"
                }
            }
        },
        "model.CardState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Deck",
                "Hand",
                "Play",
                "Kitty"
            ]
        },
        "model.CardValue": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13
            ],
            "x-enum-varnames": [
                "Ace",
                "Two",
                "Three",
                "Four",
                "Five",
                "Six",
                "Seven",
                "Eight",
                "Nine",
                "Ten",
                "Jack",
                "Queen",
                "King",
                "Joker"
            ]
        },
        "model.CutDeckReq": {
            "type": "object",
            "properties": {
                "cutIndex": {
                    "type": "string"
                },
                "matchId": {
                    "type": "integer"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "model.GameDeck": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GameplayCard"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.GameMatch": {
            "type": "object",
            "properties": {
                "art": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "currentPlayerTurn": {
                    "type": "integer"
                },
                "cutGameCardId": {
                    "type": "integer"
                },
                "deckId": {
                    "type": "integer"
                },
                "eloRangeMax": {
                    "type": "integer"
                },
                "eloRangeMin": {
                    "type": "integer"
                },
                "gameState": {
                    "$ref": "#/definitions/model.GameState"
                },
                "id": {
                    "type": "integer"
                },
                "playerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Player"
                    }
                },
                "privateMatch": {
                    "type": "boolean"
                },
                "turnPassTimestamps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.GameState": {
            "type": "integer",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                256,
                512,
                1024,
                2048,
                4096
            ],
            "x-enum-varnames": [
                "NewGameState",
                "JoinGameState",
                "WaitingState",
                "MatchReady",
                "DealState",
                "DiscardState",
                "CutState",
                "PlayState",
                "OpponentState",
                "KittyState",
                "GameWonState",
                "GameLostState",
                "MaxGameState"
            ]
        },
        "model.GameplayCard": {
            "type": "object",
            "properties": {
                "Art": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Suit": {
                    "$ref": "#/definitions/model.Suit"
                },
                "Value": {
                    "$ref": "#/definitions/model.CardValue"
                },
                "cardId": {
                    "type": "integer"
                },
                "currOwner": {
                    "type": "integer"
                },
                "origOwner": {
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/model.CardState"
                }
            }
        },
        "model.HandModifier": {
            "type": "object",
            "properties": {
                "cardIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchId": {
                    "type": "integer"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "model.JoinMatchReq": {
            "type": "object",
            "properties": {
                "matchId": {
                    "type": "integer"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "model.MatchDetailsResponse": {
            "type": "object",
            "properties": {
                "gameState": {
                    "$ref": "#/definitions/model.GameState"
                },
                "matchId": {
                    "type": "integer"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "model.MatchRequirements": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "eloRangeMax": {
                    "type": "integer"
                },
                "eloRangeMin": {
                    "type": "integer"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "model.Player": {
            "type": "object",
            "properties": {
                "accountid": {
                    "type": "integer"
                },
                "art": {
                    "type": "string"
                },
                "hand": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isReady": {
                    "type": "boolean"
                },
                "kitty": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "play": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "model.Suit": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Spades",
                "Clubs",
                "Hearts",
                "Diamonds"
            ]
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.2",
	Host:             "localhost:1323",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "cribbage server",
	Description:      "cribbage rest server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
